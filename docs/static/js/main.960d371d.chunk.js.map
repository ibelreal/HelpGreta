{"version":3,"sources":["images/dioxido-de-carbono.svg","components/Header.js","components/Filters.js","components/CityList.js","components/MapCities.js","services/api.js","components/App.js","index.js"],"names":["module","exports","Header","className","src","cloud","alt","Filters","props","onSubmit","ev","preventDefault","htmlFor","type","name","id","placeholder","value","valueCity","onChange","searchCity","target","toLowerCase","handleSearch","checked","isSorted","handleSorted","CityList","filterBySearch","length","sort","a","b","station","localeCompare","map","city","key","uid","to","replace","MapCities","latCity","lonCity","useState","width","height","latitude","longitude","zoom","viewport","mapboxApiAccessToken","mapStyle","onViewportChange","closeButton","closeOnClick","anchor","fetchCities","fetch","then","response","json","responseData","data","i","push","catch","e","alert","App","state","pollution","loading","renderMapCities","bind","selectedCity","loadData","setState","this","filter","includes","uidCity","infoCity","lat","lon","parseInt","match","params","undefined","exact","path","render","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.960d371d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dioxido-de-carbono.8344664c.svg\";","import React from 'react';\nimport cloud from '../images/dioxido-de-carbono.svg'\nimport '../stylesheets/header.scss'\n\nconst Header = () => {\n    return (\n        <header className='header'>\n            <h1 className='header__title'>help greta</h1>\n            <img className='header__img' src={cloud} alt=\"cloud\" />\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../stylesheets/filters.scss'\n\nconst Filters = (props) => {\n\n    const handleSubmit = ev => {\n        ev.preventDefault();\n    };\n\n    const handleSearch = ev => {\n        const searchCity = ev.target.value.toLowerCase();\n        props.handleSearch(searchCity);\n    };\n\n    const handleSorted = () => {\n        props.handleSorted();\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <label htmlFor=\"searchCity\" className=\"form__label\">Search for a city: </label>\n            <input\n                className=\"form__input searchBar\"\n                type=\"text\"\n                name=\"searchCity\"\n                id=\"searchCity\"\n                placeholder=\"Madrid\"\n                value={props.valueCity}\n                onChange={handleSearch}\n            />\n            <label htmlFor=\"isSorted\" className='form__label'>Sort List: </label>\n            <input\n                className='form__input checkbox'\n                name=\"isSorted\"\n                type=\"checkbox\"\n                checked={props.isSorted}\n                onChange={handleSorted} />\n        </form>\n    );\n}\nFilters.propTypes = {\n    handleSearch: PropTypes.func,\n    handleSorted: PropTypes.func\n};\n\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/cityList.scss'\n\nfunction CityList(props) {\n    const { filterBySearch } = props\n    if (!filterBySearch || filterBySearch.length === 0) {\n        return (\n            <div className='container not__found'>\n                <p className='not__found'>Oh...We can't find the city... </p>\n            </div>\n        )\n    }\n    else {\n        return (\n            <section className=\"container\" >\n                <ul className=\"list\">\n                    {(props.isSorted === true)\n                        ? props.filterBySearch.sort((a, b) => a.station.name.localeCompare(b.station.name)).map(city => (\n                            <li key={city.uid} className=\"list__item\">\n                                <Link to={`/cities/${city.uid}`} replace>\n                                    <p className=\"list__item--title\">{city.station.name}</p>\n                                </Link>\n                            </li>\n                        ))\n                        : props.filterBySearch.map(city => (\n                            <li key={city.uid} className=\"list__item\">\n                                <Link to={`/cities/${city.uid}`} replace>\n                                    <p className=\"list__item--title\">{city.station.name}</p>\n                                </Link>\n                            </li>\n                        ))}\n                </ul>\n            </section >\n        );\n    }\n}\nCityList.propTypes = {\n    filteredBySearch: PropTypes.arrayOf(PropTypes.object),\n    isSorted: PropTypes.bool\n}\n\nexport default CityList;","/* eslint-disable no-undef */\nimport React, { useState } from 'react';\nimport ReactMapGL, { Popup } from 'react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport '../stylesheets/mapCities.scss'\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoibGViMDAiLCJhIjoiY2s2bHlrZ3d2MGlwcDNycnJsdjIxaTV3eCJ9.EvM78HQcXB5yJV64WiFyfA';\n\n\nconst MapCities = (props) => {\n    const { latCity, lonCity } = props;\n\n    //Map view\n    const [viewport] = useState({\n        width: 500,\n        height: 600,\n        latitude: 53.36,\n        longitude: 12.06,\n        zoom: 3\n    });\n\n    //To stop the map from moving\n    function onViewportChange(viewport) {\n        if (viewport.longitude > 0) {\n            viewport.longitude = 0;\n        }\n    }\n\n    return (\n        <div className=\"container__map\">\n            <ReactMapGL mapboxApiAccessToken={MAPBOX_TOKEN}\n                {...viewport}\n                mapStyle=\"mapbox://styles/mapbox/dark-v9\"\n                onViewportChange={onViewportChange}\n            >\n                <Popup\n                    latitude={latCity}\n                    longitude={lonCity}\n                    closeButton={false}\n                    closeOnClick={false}\n                    anchor=\"top\" >\n                    <div>You are here</div>\n                </Popup>\n\n            </ReactMapGL>\n        </div>\n    );\n}\n\nexport default MapCities;","const ENDPOINT = 'https://api.waqi.info/map/bounds/?latlng=64.554282,-24.228128,38.935809,28.855621&token=85c0bae54393878039985ebe5ebae7977c0c8acc';\n\nconst fetchCities = () => fetch(ENDPOINT)\n    .then(response => response.json())\n    .then(responseData => responseData.data)\n    .then(response => {\n        let data = [];\n        for (let i = 0; i < 10; i++) {\n            data.push(response[i]);\n        }\n        return data;\n    })\n    .catch(e => alert(`Se ha detectado un error: ${e}`))\n\nexport default fetchCities;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport Filters from './Filters';\nimport CityList from './CityList';\nimport MapCities from './MapCities';\nimport fetchCities from '../services/api';\nimport '../stylesheets/App.scss'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollution: [],\n      searchCity: '',\n      isSorted: false,\n      loading: true\n    }\n    this.renderMapCities = this.renderMapCities.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.filterBySearch = this.filterBySearch.bind(this);\n    this.selectedCity = this.selectedCity.bind(this);\n    this.handleSorted = this.handleSorted.bind(this);\n  }\n\n  componentDidMount() {\n    fetchCities().then(loadData => {\n      if (!loadData) {\n        return this.setState({ loading: true });\n      }\n      else {\n        return this.setState({ pollution: loadData, loading: false });\n      }\n    });\n  }\n\n\n  //Function to search for the city\n  handleSearch(searchCity) {\n    this.setState({ searchCity });\n  }\n\n  //Function to sort the list of the cities\n  handleSorted() {\n    (this.state.isSorted === false)\n      ? this.setState({ isSorted: true })\n      : this.setState({ isSorted: false })\n  }\n\n  //Function to filter the cities \n  filterBySearch() {\n    return (\n      this.state.pollution\n        .filter(city => city.station.name.toLowerCase().includes(this.state.searchCity))\n\n    );\n  }\n\n  //Function that returns the latitude and longitude of the city\n  selectedCity(uidCity) {\n    let infoCity = {}\n    for (let i = 0; i < this.state.pollution.length; i++) {\n      if (this.state.pollution[i].uid === uidCity) {\n        infoCity.lat = this.state.pollution[i].lat;\n        infoCity.lon = this.state.pollution[i].lon;\n        return infoCity;\n      }\n    }\n  }\n\n\n  //Render of MapCities\n  renderMapCities(props) {\n    let uidCity = parseInt(props.match.params.uid);\n    let infoCity = this.selectedCity(uidCity);\n    if (infoCity !== undefined) {\n      return (\n        <div className=\"map\">\n          <MapCities latCity={infoCity.lat} lonCity={infoCity.lon} />\n          <CityList filterBySearch={this.filterBySearch()} isSorted={this.state.isSorted} />\n        </div >\n      )\n    }\n\n  }\n\n  render() {\n    return (\n      <main className=\"home\">\n        <Header />\n        <Filters\n          handleSearch={this.handleSearch}\n          valueCity={this.state.searchCity}\n          handleSorted={this.handleSorted}\n        />\n        <Switch>\n          <Route exact path='/'>\n            <CityList filterBySearch={this.filterBySearch()} isSorted={this.state.isSorted} />\n          </Route>\n          <Route path='/cities/:uid' render={this.renderMapCities} />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(<HashRouter>\n    <App />\n</HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}